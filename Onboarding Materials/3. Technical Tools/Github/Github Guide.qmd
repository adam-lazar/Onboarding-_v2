# Guide for using Github

## Courses

### Introduction to GitHub

::: {.rmdnote data-latex="{note}"}
This is a course is suitable for new GitHub users. You need to log into your (free) GitHub account to use it.
:::

-   **Who is this for**: New developers, new GitHub users, and students.
-   **What you'll learn**: We'll introduce repositories, branches, commits, and pull requests.
-   **What you'll build**: We'll make a short Markdown file you can use as your [profile README](https://docs.github.com/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/managing-your-profile-readme).
-   **Prerequisites**: None. This course is a great introduction for your first day on GitHub.
-   **How long**: This course is four steps long and takes less than one hour to complete.

**Course tips:**

-   Glossary terms will be *emphasised* and linked to their definition.
-   This [course](https://github.com/skills/introduction-to-github/generate) includes optional video links. Look for the :tv: emoji and follow the link to the video.

```{r intro-to-github-button, results='asis'}
if (! knitr::is_latex_output()){
  cat("<br />[![start-course](https://user-images.githubusercontent.com/1221423/218596841-0645fe1a-4aaf-4f51-9ab3-8aa2d3fdd487.svg)](https://github.com/skills/introduction-to-github/generate)")
}
```

### Review Pull Requests

::: {.rmdnote data-latex="{note}"}
This is a course is suitable for new GitHub users. You need to log into your (free) GitHub account to use it.
:::

All great projects start with collaboration. Pull requests are the foundation of teamwork on GitHub — and pull request reviews give you the ability to work together and discuss changes specific to a pull request by commenting, requesting changes, or approving.

-   **Who is this for**: Developers, new GitHub users, users new to Git, students, managers, teams.
-   **What you'll learn**: When and how to request a review; how to provide a review of someone else's pull request.
-   **What you'll build**: We'll be reviewing a pull request for a simple game.
-   **Prerequisites**: We assume you are familiar with creating branches, commits, and pull requests—you can learn this in our [Introduction to GitHub](https://github.com/skills/introduction-to-github) course.
-   **How long**: This course is five steps long and takes less than 30 minutes to complete.

## How to start this course

1.  Right-click **Start course** and open the [link](https://github.com/skills/review-pull-requests/generate) in a new tab.

```{r review-pull-requests-button, results='asis'}
if (! knitr::is_latex_output()){
  cat("<br/>[![start-course](https://user-images.githubusercontent.com/1221423/218596841-0645fe1a-4aaf-4f51-9ab3-8aa2d3fdd487.svg)](https://github.com/skills/review-pull-requests/generate)")
}
```

2.  In the new tab, follow the prompts to create a new repository.
    -   For owner, choose your personal account or an organization to host the repository.
    -   We recommend creating a public repository—private repositories will [use Actions minutes](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions).

```{r 11-create-new-course-name, echo=FALSE, message=FALSE}
knitr::include_graphics(here::here("png", "218594143-e60462b6-9f2a-4fa3-80de-063ac5429aab.png"))
```

3.  After your new repository is created, wait about 20 seconds, then refresh the page. Follow the step-by-step instructions in the new repository's README.

### Resolve editing conflicts on GitHub

::: {.rmdnote data-latex="{note}"}
Merge conflicts happen when two people make changes to the same file on GitHub—a common occurrence when you’re working with others. While resolving differences might involve some discussion, merge conflicts don’t have to be scary. This course guides you through the steps to finding the best merge conflict solution, so your team can keep building.
:::

-   **Who is this for**: New developers, new GitHub users, users new to Git, students, managers, teams.
-   **What you'll learn**: What merge conflicts are, how you resolve merge conflicts, how to reduce merge conflicts.
-   **What you'll build**: We'll work with a short Markdown resume file in this course.
-   **Prerequisites**: We recommend taking [Introduction to GitHub](https://github.com/skills/introduction-to-github) prior to this course.
-   **How long**: This course is three steps long and takes less than 30 minutes to complete.

## How to start this course

1.  Right-click **Start course** and open the [link](https://github.com/skills/resolve-merge-conflicts/generate) in a new tab.

```{r resolve-merge-conflicts-button, results='asis'}
if (! knitr::is_latex_output()){
  cat("<br/>[![start-course](https://user-images.githubusercontent.com/1221423/218596841-0645fe1a-4aaf-4f51-9ab3-8aa2d3fdd487.svg)](https://github.com/skills/resolve-merge-conflicts/generate)")
}
```

2.  In the new tab, follow the prompts to create a new repository.
    -   For owner, choose your personal account or an organization to host the repository.
    -   We recommend creating a public repository—private repositories will [use Actions minutes](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions).
3.  After your new repository is created, wait about 20 seconds, then refresh the page. Follow the step-by-step instructions in the new repository's README.
